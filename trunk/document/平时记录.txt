1、jdbctemple的相关插入，有时候插入不进去是为何？ioslogparase
	cacheresultset的不能指针的问题（写个cahceresultset查询出来后，被多次使用的例子）

2、
@see 生成文档中的“参见xx 的条目”的超链接，后边可以加上：“类名”、“完整类名”、“完整类名#方法”。可用于：类、方法、变量注释。 
@param 参数的说明。可用于：方法注释。 
@return 返回值的说明。可用于：方法注释。 
@exception 可能抛出异常的说明。可用于：方法注释。 
@version 版本信息。可用于：类注释。 
@author 作者名。可用于：类注释。 
@deprecated 对类或方法的说明 该类或方法不建议使用,引起不推荐使用的警告 
@since 表示从那个版本起开始有了这个函数 
@see  表示交叉参考
@throws已经处理过的异常

3、
$('#button').attr('disabled',"true");添加disabled属性 
$('#button').removeAttr("disabled"); 移除disabled属性
详细出处参考：http://www.jb51.net/article/25415.htm


4、
// 获取所有的IOS_return_click中的时间段的数据
public List<IosReturnLog> getReturnListByDate(Date beginTime, Date endTime) {
	String sql = "SELECT  `id`,  `ad_id`,  `mac`,  `ip`,  `come_from`,  "
			+ "`device_name`,  `os_version`,  `open_udid`,  "
			+ "`ua`,  `access_time` FROM "
			+ getTableNameForIos(IosAccessLogType.RETURN_CLICK, beginTime)
			+ " where access_time >= ? and access_time < ?";
	List<IosReturnLog> list = getJdbcTemplate().query(sql,
			new BeanPropertyRowMapper<IosReturnLog>(IosReturnLog.class),
			new Object[] { beginTime, endTime });

	return list;
}


5、
postfix的main.cf的配置文件的几个属性的含义


6、修改定时计算方案 java和liunx的2中定时

7、jsp里面使用人renturn

8、includ的页面要写request.getcontextpath的绝对路径

9、46做服务器端用rsync+inotify将数据copy到47和12，并将46的目录共享nft出来，让上传的文件去上传共享目录，这样就每次上传都是上传到服务端46，这样就可以保持每次都写入一个服务器

10、jquery如何给div等标签里面添加内容

11、ajax同步不要异步

12、nginx的是如何限制访问

13、grep命令的正则匹配  grep -E 开启正则表达式支持
	然后规则你就去看咯 
	小破孩 11:04:53 
	grep -E “正则” filename? 

14、数组和容器在遍历的时候修改当前遍历的值和添加遍历值或者删除遍历值的问题, 容器修改引用是set，数组修改引用是等号。foreach遍历是将遍历的当前容器的值赋值给一个新的引用，所以修改没有效果。容器遍历的时候不能删除，删除后会改变size出错


15、 jdbc的executeQuery execute update updatequery batch（批量）

16、用spring的jdbcTemplate.query(sql, new BeanPropertyRowMapper<T>(mappedClass), args);如果是查询sql里面含有需要输入条件是date类型，我们可以直接用string类型传入

17、postfix的main.cf的文件里面的英文属性，以及如何过滤

18、inblur="this.className='sub_input';vailyeahyooid(this.value);" class=sub_input onfocus="this.className='sub_input2'" 


19、jsp的include和其他的include

20、css浮动

21、jsp的readio使用方式
	type要保证一致这里是type="radio"证明着2个radio是一组
	<input id="byRealTime" type="radio" name="isRealTimeType" value="real"/>实时
	<input id="byNonRealTime" type="radio" name="isRealTimeType" value="nonreal"/><label for="byRealTime">非实时 </label>for的用法，点击label可以选择id= byRealTime的input

22.NumberFormat nf = new DecimalFormat("0.00%");

23、 jpa， spring security， css ，js基础到高级再到ext， spring框架等等，java基础到高级 

24、postfix添加组，要是服务器是stmp.yeahwap.com.那么组名可以只写名字，不写域名，如果这个服务器里面包含了wap3.cn，那么组名必须写xxx@wap3.cn

25.nginx的负载均衡为什么分流的是pass到是某个服务器ip，但是到tomcat的时候，又必须是根据域名来获取连接(nginx的rewrit也要搞明吧)

26、图片上传后清空上传框
	普通框清空：
	1. $("#yeahyooid").attr('value','');
	2.$("#yeahyooid").val("");
	3、reset的方法
	4、file上传框清空:
	只能用reset或者remove掉之后在add或者用

	$("#csv").after($("#csv").clone().val("")); 复制一个csv的空对象
	$("#csv").remove();把以前的csv移除



27、DATE_FORMA T(date, format) 根据格式串format 格式化日期或日期和时间值date，返回结果串。
	可用DATE_FORMAT( ) 来格式化DATE 或DATETIME 值，以便得到所希望的格式。根据format字符串格式化date值:
	%S, %s 两位数字形式的秒（ 00,01, . . ., 59）
	%i 两位数字形式的分（ 00,01, . . ., 59）
	%H 两位数字形式的小时，24 小时（00,01, . . ., 23）
	%h, %I 两位数字形式的小时，12 小时（01,02, . . ., 12）
	%k 数字形式的小时，24 小时（0,1, . . ., 23）
	%l 数字形式的小时，12 小时（1, 2, . . ., 12）
	%T 24 小时的时间形式（h h : m m : s s）
	%r 12 小时的时间形式（hh:mm:ss AM 或hh:mm:ss PM）
	%p AM 或P M
	%W 一周中每一天的名称（ S u n d a y, Monday, . . ., Saturday）
	%a 一周中每一天名称的缩写（ Sun, Mon, . . ., Sat）
	%d 两位数字表示月中的天数（ 00, 01, . . ., 31）
	%e 数字形式表示月中的天数（ 1, 2， . . ., 31）
	%D 英文后缀表示月中的天数（ 1st, 2nd, 3rd, . . .）
	%w 以数字形式表示周中的天数（ 0 = S u n d a y, 1=Monday, . . ., 6=Saturday）
	%j 以三位数字表示年中的天数（ 001, 002, . . ., 366）
	% U 周（0, 1, 52），其中Sunday 为周中的第一天
	%u 周（0, 1, 52），其中Monday 为周中的第一天
	%M 月名（J a n u a r y, February, . . ., December）
	%b 缩写的月名（ J a n u a r y, February, . . ., December）
	%m 两位数字表示的月份（ 01, 02, . . ., 12）
	%c 数字表示的月份（ 1, 2, . . ., 12）
	%Y 四位数字表示的年份
	%y 两位数字表示的年份
	%% 直接值“%”

	select date_format(日期字段,’%Y-%m-%d’) as ‘日期’ from test

28、MySQL 的CAST()和CONVERT()函数可用来获取一个类型的值，并产生另一个类型的值。两者具体的语法如下：
	CAST(value as type);    和 CONVERT(value, type);
	就是CAST(xxx AS 类型), CONVERT(xxx,类型)。
	可以转换的类型是有限制的。这个类型可以是以下值其中的一个： 
	•二进制，同带binary前缀的效果 : BINARY    
	•字符型，可带参数 : CHAR()     
	•日期 : DATE     
	•时间: TIME     
	•日期时间型 : DATETIME     
	•浮点数 : DECIMAL      
	•整数 : SIGNED     
	•无符号整数 : UNSIGNED 
	SELECT CONVERT(NOW(), CHAR);
	SELECT CAST(CAST(NOW() AS DATE) AS UNSIGNED);
	select date_format(NOW(),'%Y-%m-%d %H') ;

29、serlvet管理下载过程（参照union3的web）

30、file Associations可以设置eclipse的默认打开文件的插件

31、linux脚本后台运行&这个符号只能是空格，不能是回车 fuck!!!!


32、linux的shell脚本
	1、if的条件判断且是[] && []
	2、if条件判断的[]里面必须都有空格(至少要有一个,也可以是多个)，且=号两边需要用""引起来
	3、2>&1不能有空格
	4、shell中可以用tab建
	5、&是后台运行命令，必须用紧接着命令，用空格隔开，不能用回车切记！！！
	6、if里面的条件比较
	　　-e filename        如果 filename 存在，则为真            [ -e /var/log/syslog ]
	　　-d filename       如果 filename 为目录，则为真       [ -d /tmp/mydir ]
	　　-f filename        如果 filename 为常规文件，则为真 [ -f /usr/bin/grep ]
	　　-L filename        如果 filename 为符号链接，则为真   [ -L /usr/bin/grep ]
	　　-r filename          如果 filename 可读，则为真              [ -r /var/log/syslog ]
	　　-w filename        如果 filename 可写，则为真            [ -w /var/mytmp.txt ]
	　　-x filename         如果 filename 可执行，则为真           [ -L /usr/bin/grep ]

	7、算术比较运算符
	　　num1 -eq num2      等于                   [ 3 -eq $mynum ]
	　　num1 -ne num2      不等于                 [ 3 -ne $mynum ]
	　　num1 -lt num2      小于                   [ 3 -lt $mynum ]
	　　num1 -le num2      小于或等于              [ 3 -le $mynum ]
	　　num1 -gt num2      大于                   [ 3 -gt $mynum ]
	　　num1 -ge num2      大于或等于              [ 3 -ge $mynum  ]



33、测试arrays.aslist的时候会将数组的顺序改变，arrays.aslist转化后边界不能增长的问题
34、jdbc异步保存

35、冒泡排序
36、数据库中的Date类型需要new java.sql.Date(new Date().getTime)
37、数据库中的Timestamp类型需要new Timestamp(beginTime.getTime()）
38、平台的统计线程hessian需要高明白呀
39、递归
40、javascript
41、css
42、spring里面的注解
	@Autowired 注解也可以名字在这里噢
	public void setDataSource(@Qualifier("dataSource")
	DataSource dataSource) {
	this.dataSource = dataSource;
	}
	//	/**
	//	 * 废弃了以前计算业绩的公式，直接用发布的金钱来作为业绩
	//	 * @param saleId 推广人员的ID
	//	 * @param date 当前计算业绩的日期
	//	 */
	//	public static void compute_new(int saleId, String date) {
	//		if (date == null) {
	//			return ;
	//		} else if (saleId <= 0) {
	//			// 计算date这一天所有的推广人员的业绩
	//			// 1.获取
	//			int[] saleArray = getSaleArray();
	//		} else if (saleId > 0){
	//			
	//		}
	//	}


43、nginx的正则和rewrite拷贝下来以及，学会
44、top -----> 1
45、show full processlist
46、mysql配置文件:my.cnf
	# Try number of CPU's*2 for thread_concurrency
	thread_concurrency = 8
	log-warnings=0  表示警告记录
	Answer ---Sarah Mclachlan
47、linxu awp
48、mysql的所有my.cf文件拷贝
49、可以加数据源隔离连接池和读写分离

50、nginx禁止空agent的浏览器访问 20个Nginx Web服务器最佳安全实践 (2011-08-10 14:28) 
分类： webserver 

	nginx禁止空agent的浏览器访问
	server{
	……
	if ($http_user_agent ~ ^$) {
	return 412;
	}
	……
	}

	测试方法
	curl http://www.xxx.com/index.php -A “”


binlog-do-db=需要复制的数据库名，如果复制多个数据库，重复设置这个选项即可
binlog-ignore-db=不需要复制的数据库苦命，如果复制多个数据库，重复设置这个选项即可
replicate-do-db=需要复制的数据库名，如果复制多个数据库，重复设置这个选项即可
replicate-ignore-db=需要复制的数据库名，如果复制多个数据库，重复设置这个选项即可


51、wget curl

52、postfix反垃圾机制复习(现有服务器上的发出和收入限制)

53、AOP args和argNames详情搞清楚
54、log4j，在root默认的里面添加的多个日志都可以记录
55、memecahed必须要将使用的实体序列化


56、public class UserController {
	@Resource
	private UserService userService;
	
	// value = "userRegister"也会匹配userRegister.htm最好写上
	@RequestMapping(value = "userRegister", method=RequestMethod.GET, params={"name","password"})
	public String userRegister(@RequestParam("name") String name, @RequestParam("password") String password, HttpServletRequest req) {
		System.out.println("进来了!!");
		User user = new User();
	spring mvc 的方法中用request.setAtt(xxx,xxx)在jsp页面上也可以用el表达式获取














