### set log levels (DEBUG, INFO, WARN, ERROR, FATAL) ###
####log4j.rootLogger=DEBUG(log level), debugLog(log to appender, here will be stdout or debugLog)
#log4j.logger.org(the package name whick u want to log)=ERROR(the log level you want)

log4j.rootLogger=DEBUG, all
log4j.logger.revenueDataLogHarry=INFO, revenueDataLog
log4j.logger.com.harry.test=ERROR

log4j.appender.all=org.apache.log4j.DailyRollingFileAppender
log4j.appender.all.File=G:/all.txt
log4j.appender.all.DatePattern='_'yyyyMMdd'.log'
log4j.appender.all.layout=org.apache.log4j.PatternLayout
log4j.appender.all.layout.ConversionPattern=%d{yyyy.MM.dd HH:mm:ss.SSS} %5p %c{1}:%L - %m%n

log4j.appender.revenueDataLog=org.apache.log4j.DailyRollingFileAppender
log4j.appender.revenueDataLog.File=G:/revenueData.txt
log4j.appender.revenueDataLog.DatePattern='_'yyyyMMdd'.log'
log4j.appender.revenueDataLog.layout=org.apache.log4j.PatternLayout
log4j.appender.revenueDataLog.layout.ConversionPattern=%d{yyyy.MM.dd HH:mm:ss.SSS} %5p %c{1}: - %m%n

#Log4j中有三个主要的组件，它们分别是 Logger(记录器)、Appender(输出目的地)和Layout(信息输出方式).
#Log4j 允许开发人员定义多个Logger，每个Logger拥有自己的名字，Logger之间通过名字来表明隶属关系。有一个Logger称为Root，它永远存在，且不能通过名字检索或引用，可以通过Logger.getRootLogger()方法获得，
#其它Logger通过 Logger.getLogger(String name)方法。
#logger记录器:rootLogger是默认必须存在的
#首先，是设置root(默认的)，格式为 log4j.rootLogger=[level],appenderName, ...，，后面是appender的输出的目的地，appenderName就是指定日志信息输出到哪个地方。
#您可以同时指定多个输出目的地。 配置日志信息输出目的地Appender
#例子:
#log4j.rootLogger=DEBUG, all (其中DEBUG就是设置需要输出信息的级别, all就是log日志的名字
#log4j.appender.all=org.apache.log4j.DailyRollingFileAppender (all这种日志定义的输出类型，这里是文件)
#log4j.appender.all.File=G:/all.txt(all这种日志输出文件的地址)
#log4j.appender.all.DatePattern='_'yyyyMMdd'.log'（all这种日志输出文件中每行的格式）
#log4j.appender.all.layout=org.apache.log4j.PatternLayout（all这种日志输出文件的信息输出方式这里是文件）
#log4j.appender.all.layout.ConversionPattern=%d{yyyy.MM.dd HH:mm:ss.SSS} %5p %c{1}:%L - %m%n


#注意:
#log4j.logger.revenueDataLogHarry=INFO, revenueDataLog（这里我们是定义了一个名称为revenueDataLogHarry的日志，注意看，我们必须将log4j.appender.revenueDataLog的revenueDataLog和log4j.logger.revenueDataLogHarry=INFO, revenueDataLog中的revenueDataLog保持一致
#log4j.logger.com.harry.test=ERROR这里是后面加的包名，它的意思是test包下的记录级别是ERROR，但是值得注意的是，它只控制rootLogger的日志。并不限制revenueDataLogHarry，当你在java中的test包调用revenueDataLogHarry的日志的时候，只根据revenueDataLogHarry的记录级别记录